# Routes
# This file defines all application routes (Higher priority routes first)

#Authentication
GET     /login                                                                              controllers.LoginController.login

#Rest API
GET     /dataservice/database                                                               controllers.HomeController.showdbs
GET     /dataservice/database/:databaseName                                                 controllers.HomeController.getCollections(databaseName:String)
GET     /dataservice/database/getDoc/:databaseName/:collectionName/:offset/:limit           controllers.HomeController.getDocuments(databaseName: String, collectionName: String, offset:Int, limit:Int)
GET     /dataservice/database/metadata/:databaseName/:collectionName                        controllers.HomeController.getMetadata(databaseName: String, collectionName: String)
POST    /insertDocument                                                                     controllers.HomeController.post()
GET     /dataservice/database/delete/:databaseName/:collectionName/:docID                   controllers.HomeController.deleteDocument(databaseName: String, collectionName: String, docID: String)

#Front-end
GET     /index.html                                                    controllers.Assets.at(path="/public/html", file="index.html")
GET     /public/*file                                                   controllers.Assets.versioned(path="/public", file: Asset)
GET     /viewDocuments/:databaseName/:collectionName                   controllers.HomeController.viewDocuments(databaseName: String, collectionName: String)

#Swagger
GET   /swagger.json                 controllers.ApiHelpController.getResources
GET   /docs/                        controllers.Assets.at(path="/public/swagger-ui",file="index.html")
GET   /docs/*file                   controllers.Assets.at(path="/public/swagger-ui",file)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)
